{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\task99tech3\\\\src\\\\components\\\\TableData.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport PaginationPage from './PaginationPage';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { CardMedia } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport Pagination from '@mui/material/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rows = [{\n  name: 'Frozen yoghurt',\n  calories: 159,\n  fat: 6.0,\n  carbs: 24,\n  protein: 4.0\n}, {\n  name: 'Ice cream sandwich',\n  calories: 237,\n  fat: 9.0,\n  carbs: 37,\n  protein: 4.3\n}, {\n  name: 'Eclair',\n  calories: 262,\n  fat: 16.0,\n  carbs: 24,\n  protein: 6.0\n}, {\n  name: 'Eclair',\n  calories: 262,\n  fat: 16.0,\n  carbs: 24,\n  protein: 6.0\n}];\n\nconst TableData = _ref => {\n  _s();\n\n  let {} = _ref;\n  const [rows, setRows] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n\n  const getData = async () => {\n    const resp = await fetch('https://api.sampleapis.com/countries/countries');\n    const json = await resp.json(); // console.log(\"setRows\", json)\n\n    setRows(json);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []); // Get current posts\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = rows.slice(indexOfFirstPost, indexOfLastPost); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    align: \"center\",\n    component: Paper,\n    children: [loading ? /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        mt: 3,\n        mb: 2,\n        textAlign: 'center',\n        color: '#00272a'\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Please wait...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 84\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        width: 950,\n        maxHeight: \"50mh\",\n        overflow: \"scroll\"\n      },\n      \"aria-label\": \"caption table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Flag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Capital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Population\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: currentPosts && currentPosts.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: /*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"40\",\n              width: \"40\",\n              image: row.media.flag,\n              alt: row.name,\n              sx: {\n                py: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: row.capital\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: row.currency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: row.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: row.population\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"waseeeeeeeeeeee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      page: rows.length,\n      onChange: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PaginationPage, {\n      postsPerPage: postsPerPage,\n      totalPosts: rows.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TableData, \"FjNU+z/emZx8cnZcPn5Fbhp38Js=\");\n\n_c = TableData;\nexport default TableData;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableData\");","map":{"version":3,"sources":["D:/Projects/task99tech3/src/components/TableData.jsx"],"names":["useEffect","useState","PaginationPage","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CardMedia","Typography","Pagination","rows","name","calories","fat","carbs","protein","TableData","setRows","loading","setLoading","currentPage","setCurrentPage","postsPerPage","getData","resp","fetch","json","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","mt","mb","textAlign","color","width","maxHeight","overflow","map","row","media","flag","py","capital","currency","phone","population","length"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\r\nimport PaginationPage from './PaginationPage';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { CardMedia } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport Pagination from '@mui/material/Pagination';\r\n\r\n\r\nconst rows = [\r\n  {name:'Frozen yoghurt', calories:159, fat:6.0, carbs:24, protein:4.0},\r\n {name:'Ice cream sandwich', calories:237, fat:9.0, carbs:37, protein:4.3},\r\n  {name:'Eclair', calories:262, fat:16.0, carbs:24, protein:6.0},\r\n  {name:'Eclair', calories:262, fat:16.0, carbs:24, protein:6.0},\r\n];\r\n\r\nconst TableData=(({})=>{\r\nconst [rows, setRows] = useState(\"\");\r\nconst [loading, setLoading] = useState(true);\r\nconst [currentPage, setCurrentPage] = useState(1);\r\nconst [postsPerPage] = useState(10);\r\n\r\n    const getData = async () => {\r\n        const resp = await fetch('https://api.sampleapis.com/countries/countries');\r\n        const json = await resp.json();\r\n        // console.log(\"setRows\", json)\r\n        setRows(json);\r\n        setLoading(false)\r\n      }\r\n    \r\n      useEffect(() => {\r\n        getData();\r\n      }, []);\r\n\r\n      // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = rows.slice(indexOfFirstPost, indexOfLastPost);\r\n  // Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <TableContainer align=\"center\" component={Paper}>\r\n    {loading?\r\n          <Typography sx={{ mt: 3, mb: 2, textAlign: 'center', color:'#00272a' }}> <h3>Please wait...</h3> </Typography>\r\n          :\r\n      <Table sx={{ width: 950, maxHeight:\"50mh\", overflow:\"scroll\" }} aria-label=\"caption table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">Flag</TableCell>\r\n            <TableCell align=\"left\">Name</TableCell>\r\n            <TableCell align=\"left\">Capital</TableCell>\r\n            <TableCell align=\"left\">Currency</TableCell>\r\n            <TableCell align=\"left\">Phone</TableCell>\r\n            <TableCell align=\"left\">Population</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {currentPosts && currentPosts.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell align=\"left\">\r\n              <CardMedia\r\n                    component=\"img\"\r\n                    height=\"40\"\r\n                    width=\"40\"\r\n                    image={row.media.flag}\r\n                    alt={row.name}\r\n                    sx={{py:1}}\r\n                />\r\n              </TableCell>\r\n              <TableCell >{row.name}</TableCell>\r\n              <TableCell align=\"left\">{row.capital}</TableCell>\r\n              <TableCell align=\"left\">{row.currency}</TableCell>\r\n              <TableCell align=\"left\">{row.phone}</TableCell>\r\n              <TableCell align=\"left\">{row.population}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    }\r\n    <h3>waseeeeeeeeeeee</h3>\r\n    <Pagination  page={rows.length} onChange={paginate} />\r\n    <PaginationPage\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={rows.length}\r\n        paginate={paginate}\r\n      />\r\n    </TableContainer>\r\n  );\r\n})\r\n\r\nexport default TableData;\r\n\r\n"]},"metadata":{},"sourceType":"module"}