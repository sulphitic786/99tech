{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\task99tech3\\\\src\\\\components\\\\TableData.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { CardMedia } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rows = [{\n  name: 'Frozen yoghurt',\n  calories: 159,\n  fat: 6.0,\n  carbs: 24,\n  protein: 4.0\n}, {\n  name: 'Ice cream sandwich',\n  calories: 237,\n  fat: 9.0,\n  carbs: 37,\n  protein: 4.3\n}, {\n  name: 'Eclair',\n  calories: 262,\n  fat: 16.0,\n  carbs: 24,\n  protein: 6.0\n}, {\n  name: 'Eclair',\n  calories: 262,\n  fat: 16.0,\n  carbs: 24,\n  protein: 6.0\n}];\n\nconst TableData = () => {\n  _s();\n\n  const [rows, setRows] = useState(\"\");\n\n  const getData = async () => {\n    const resp = await fetch('https://api.sampleapis.com/countries/countries');\n    const json = await resp.json();\n    console.log(\"setRows\", json);\n    setRows(json);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: \"65%\"\n      },\n      \"aria-label\": \"caption table\",\n      children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n        children: \"A basic table example with a caption\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Flag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Capital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Population\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows && rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            height: \"40\",\n            width: \"40\",\n            image: row.media.flag,\n            alt: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.capital\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.currency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.population\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TableData, \"Xoj1Yi7NgnvwcrMILBCfpzAjT30=\");\n\n_c = TableData;\nexport default TableData;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableData\");","map":{"version":3,"sources":["D:/Projects/task99tech3/src/components/TableData.jsx"],"names":["useEffect","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CardMedia","rows","name","calories","fat","carbs","protein","TableData","setRows","getData","resp","fetch","json","console","log","minWidth","map","row","media","flag","capital","currency","phone","population"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { CardMedia } from '@mui/material';\r\n\r\nconst rows = [\r\n  {name:'Frozen yoghurt', calories:159, fat:6.0, carbs:24, protein:4.0},\r\n {name:'Ice cream sandwich', calories:237, fat:9.0, carbs:37, protein:4.3},\r\n  {name:'Eclair', calories:262, fat:16.0, carbs:24, protein:6.0},\r\n  {name:'Eclair', calories:262, fat:16.0, carbs:24, protein:6.0},\r\n];\r\n\r\nconst TableData=(()=>{\r\nconst [rows, setRows] = useState(\"\");\r\n    const getData = async () => {\r\n        const resp = await fetch('https://api.sampleapis.com/countries/countries');\r\n        const json = await resp.json();\r\n        console.log(\"setRows\", json)\r\n        setRows(json);\r\n      }\r\n    \r\n      useEffect(() => {\r\n        getData();\r\n      }, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: \"65%\" }} aria-label=\"caption table\">\r\n        <caption>A basic table example with a caption</caption>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Flag</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell align=\"right\">Capital</TableCell>\r\n            <TableCell align=\"right\">Currency</TableCell>\r\n            <TableCell align=\"right\">Phone</TableCell>\r\n            <TableCell align=\"right\">Population</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows && rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    height=\"40\"\r\n                    width=\"40\"\r\n                    image={row.media.flag}\r\n                    alt={row.name}\r\n                />\r\n              <TableCell component=\"th\" scope=\"row\"></TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\r\n              <TableCell align=\"right\">{row.capital}</TableCell>\r\n              <TableCell align=\"right\">{row.currency}</TableCell>\r\n              <TableCell align=\"right\">{row.phone}</TableCell>\r\n              <TableCell align=\"right\">{row.population}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n})\r\n\r\nexport default TableData;\r\n\r\n"]},"metadata":{},"sourceType":"module"}